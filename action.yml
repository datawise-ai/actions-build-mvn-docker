name: "k8s deploy"
description: "deploy to k8s"
inputs: 
  PROJECT: 
    required: true
  APP:
    required: true
  SERVICE:
    required: true    
  INSTANCE:
    required: true
  VERSION:
    required: true
  DOCKER_REPOSITORY_BASE:
    required: true
    default: "docker.datawise.ai"
  DOCKER_USER: 
    required: true
    default: "builder"
  DOCKER_PASS:
    required: true
  JAVA_VERSION:
    required: true
  JAVA_DISTRIBUTION:
    required: true
    default: "temurin"
  JIB_JAVA_BASE: 
    required: true
    default: "eclipse-temurin"
  JIB_VERSION:
    required: true
    default: "3.3.0"
runs:
  using: "composite"
  steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: setup docker context for buildx
      id: buildx-context
      shell: bash       
      run: |
        docker context create builders || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        endpoint: builders

    - name: Login to Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}
        username: builder
        password: ${{ inputs.DOCKER_PASS }}

    - uses: actions/checkout@v2

    - uses: actions/setup-java@v3
      with:
        distribution: ${{ inputs.JAVA_DISTRIBUTION }}
        java-version: ${{ inputs.JAVA_VERSION }}

    - name: Cache mvn packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.OS }}-mvn-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.OS }}-mvn-
          ${{ runner.OS }}-


    - name: Jib build
      run: |
        mvn -B -e compile -Dmaven.test.skip=true \
            com.google.cloud.tools:jib-maven-plugin:${{ inputs.JIB_VERSION }}:build \
            -Djib.from.image=${{ inputs.JIB_JAVA_BASE }}:{{ inputs.JAVA_VERSION }}  \
            -Djib.to.image=${{ inputs.PROJECT }}.${{ inputs.DOCKER_REPOSITORY_BASE }}/${{ inputs.APP }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }}  \
            -Djib.to.tags=${{ inputs.VERSION }},latest




