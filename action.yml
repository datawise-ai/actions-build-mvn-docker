name: "k8s deploy"
description: "deploy to k8s"
inputs: 
  PROJECT: 
    required: true
  APP:
    required: true
  SERVICE:
    required: true    
  INSTANCE:
    required: true
  VERSION:
    required: true
  VALUE_FILES:
    required: true
    default: ".github/helm/values.yml"
  RELEASE:
    required: true
  CHART:
    required: true
  CHART_REPO:
    required: false
  CHART_REPO_ALIAS:
    required: false
  KUBECONFIG_FILE:
    required: true
  REGISTRY:
    required: true
  REPOSITORY:
    required: true
  DOCKER_USER: 
    required: true
    default: "builder"
  DOCKER_PASS:
    required: false
  JAVA_VERSION:
    required: true
    default: 11
runs:
  using: "composite"
  steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: setup docker context for buildx
      id: buildx-context
      shell: bash       
      run: |
        docker context create builders || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        endpoint: builders

    - name: Login to Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.REGISTRY }}
        username: ${{ inputs.DOCKER_USER }}
        password: ${{ inputs.DOCKER_PASS }}        

    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: ${{ inputs.JAVA_VERSION }}

    - name: Cache mvn packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.OS }}-mvn-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.OS }}-mvn-
          ${{ runner.OS }}-

    - name: Jib build
      run: mvn -B -e compile jib:build -Dmaven.test.skip=true -Djib.to.tags=${{ inputs.VERSION }},latest -D jib.to.image=${{ inputs.REGISTRY }}/${{ inputs.app }}-${{ inputs.SERVICE }}-${{ inputs.INSTANCE }} 


    - uses: datawise-ai/actions-helm-deploy@main
      with: 
        PROJECT: ${{ inputs.PROJECT }}
        APP: ${{ inputs.APP }}
        SERVICE: ${{ inputs.SERVICE }}
        INSTANCE: ${{ inputs.INSTANCE }}
        KUBECONFIG_FILE: '${{ inputs.KUBECONFIG_FILE }}'
        VERSION: ${{ inputs.VERSION }}
        CHART: ${{ inputs.chart }}
        CHART_REPO_ALIAS: ${{ inputs.CHART_REPO_ALIAS }}
        CHART_REPO: ${{ inputs.CHART_REPO }}
        RELEASE: ${{ inputs.RELEASE }}


